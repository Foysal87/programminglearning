Standard Input Stream (cin): 
Usually the input device is the keyboard. cin is the instance of the class istream and is used to read input from the standard input device which is usually keyboard.
The extraction operator(>>) is used along with the object cin for reading inputs. The extraction operator extracts the data from the object cin which is entered using the keboard.

Standard output stream (cout): 
Usually the standard output device is the display screen. cout is the instance of the ostream class. cout is used to produce output on the standard output device which is usually the display screen. The data needed to be displayed on the screen is inserted in the standard output stream (cout) using the insertion operator (<<).

<==========CODE============>
#include <bits/stdc++.h>
using namespace std;
int main () {
   int n;
   cin>>n;
   cout<<n;
}

<==========CODE============>

***endl vs '\n' in C++

Although they both seem to do the same thing, there is a subtle difference between them.
cout << endl  : Inserts a new line and flushes the stream
cout << "\n"  : Only inserts a new line.
Therefore,
cout << endl;
can be said equivalent to
cout << ‘\n’ << flush;
As a conclusion, cout << “\n” seems performance wise better than cout << endl; unless flushing of stream is required.

<==========CODE============>
#include <bits/stdc++.h>
using namespace std;
int main () {
   int n;
   cin>>n;
   cout<<n<<endl;
   cout<<n<<'\n';
}

<==========CODE============>